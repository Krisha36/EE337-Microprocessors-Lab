C51 COMPILER V9.60.7.0   LAB6                                                              02/28/2023 00:05:34 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE LAB6
OBJECT MODULE PLACED IN .\Objects\lab6.obj
COMPILER INVOKED BY: E:\Keil_v5\C51\BIN\C51.EXE lab6.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\lab6
                    -.lst) TABS(2) OBJECT(.\Objects\lab6.obj)

line level    source

   1          #include <at89c5131.h>
   2          #include "lcd.h"
   3          
   4          code unsigned char display_msg1[]="   START PROGRAM     ";  
   5          code unsigned char display_msg2[]="   FIRST INPUT     ";
   6          code unsigned char display_msg3[]="   NEXT INPUT     ";
   7          code unsigned char display_msg4[]="   SORTING...     ";
   8          code unsigned char display_msg5[]="   SORTING     ";
   9          code unsigned char display_msg6[]="   COMPLETED     ";
  10          code unsigned char display_msg7[]="  NUMBER TO BE     ";
  11          code unsigned char display_msg8[]="   SEARCHED     ";
  12          code unsigned char display_msg9[]="   THE INDEX IS     ";
  13          code unsigned char display_msg10[]="   NUMBER     ";
  14          code unsigned char display_msg11[]="   NOT FOUND     ";
  15          unsigned int swap;
  16          unsigned int n;
  17          unsigned int count;
  18          unsigned int d[5];
  19          unsigned int a[5];
  20          unsigned char c;
  21          unsigned int e;
  22          unsigned int f;
  23          unsigned int g;
  24          
  25          
  26          void main()
  27          {
  28   1        
  29   1        P1 = 0x00;
  30   1        lcd_init();
  31   1        lcd_cmd(0x80);  //Move cursor to first lin
  32   1        msdelay(4);
  33   1        lcd_write_string(display_msg1);
  34   1        msdelay(5000);
  35   1        n = 0;
  36   1        d[0] = 0x00;
  37   1        lcd_cmd(0x01);
  38   1        lcd_cmd(0x80);
  39   1        msdelay(4);
  40   1        lcd_write_string(display_msg2);
  41   1        c = 15;
  42   1        while(n<5)
  43   1        {
  44   2          P1 = 0x0F;
  45   2          if(n>0)
  46   2          {
  47   3            P1 = d[n-1];
  48   3            lcd_cmd(0x01);
  49   3            msdelay(4);
  50   3            lcd_cmd(0x80);
  51   3            msdelay(4);
  52   3            lcd_write_string(display_msg3);
  53   3          }
  54   2          P1 = P1 | 0x0F;
C51 COMPILER V9.60.7.0   LAB6                                                              02/28/2023 00:05:34 PAGE 2   

  55   2          msdelay(5000);
  56   2          lcd_cmd(0x01);
  57   2          msdelay(4);
  58   2          lcd_cmd(0x80);
  59   2          msdelay(4);
  60   2          P1 = P1 & c;
  61   2          a[n] = P1;
  62   2          d[n] = a[n]<<4; //shift by 4
  63   2          msdelay(1000);
  64   2          n++;
  65   2        }
  66   1        n = 0;
  67   1        count = 1; 
  68   1        P1 = d[4];
  69   1        lcd_write_string(display_msg4);
  70   1        while( count != 0){
  71   2          count = 0;
  72   2          for (n=0;n<4;n++){
  73   3            if(a[n] >  a[n+1]){
  74   4              swap = a[n];
  75   4              a[n] = a[n+1];
  76   4              a[n+1] = swap;
  77   4              count++;
  78   4            }
  79   3          }
  80   2        } 
  81   1        msdelay(5000);
  82   1        P1 = 0x00;
  83   1        lcd_cmd(0x01);
  84   1        msdelay(4);
  85   1        lcd_write_string(display_msg5);
  86   1        lcd_cmd(0xC0);
  87   1        msdelay(4);
  88   1        lcd_write_string(display_msg6);
  89   1        n = 0;
  90   1        msdelay(1000);
  91   1        while(n<5)
  92   1        {
  93   2          P1 = a[n]<<4;
  94   2          msdelay(5000);
  95   2          P1 = 0x00;
  96   2          msdelay(1000);
  97   2          n++;
  98   2        }
  99   1        P1 = 0x00;
 100   1        msdelay(1000);
 101   1        P1 = 0xFF;
 102   1        lcd_cmd(0x01);
 103   1        msdelay(4);
 104   1        lcd_write_string(display_msg7);
 105   1        lcd_cmd(0xC0);
 106   1        msdelay(4);
 107   1        lcd_write_string(display_msg8);
 108   1        msdelay(5000);
 109   1        e = P1 & 0x0F;
 110   1        lcd_cmd(0x01);
 111   1        msdelay(4);
 112   1        P1 = 0x00;
 113   1        msdelay(1000);
 114   1        n = 0;
 115   1        while(n<5)
 116   1        {
C51 COMPILER V9.60.7.0   LAB6                                                              02/28/2023 00:05:34 PAGE 3   

 117   2          if(e == a[n])
 118   2          {
 119   3            f = 1;
 120   3            g = n+1;
 121   3            break;
 122   3          }
 123   2          else
 124   2          {
 125   3            f =0;
 126   3          }
 127   2          n++;
 128   2        }
 129   1        if(f == 1)
 130   1        {
 131   2          lcd_cmd(0x01);
 132   2          msdelay(4);
 133   2          lcd_write_string(display_msg9);
 134   2          P1 = (g)<<4;
 135   2          while(1);
 136   2        }
 137   1        else
 138   1        {
 139   2          lcd_cmd(0x01);
 140   2          msdelay(4);
 141   2          lcd_write_string(display_msg10);
 142   2          lcd_cmd(0xC0);
 143   2          msdelay(4);
 144   2          lcd_write_string(display_msg11);
 145   2          while(1);
 146   2        }
 147   1      }
 148          //1,9,8,12,14


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    811    ----
   CONSTANT SIZE    =    205    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     33       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
